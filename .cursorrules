{
  "project_context": {
    "name": "GAIAthon-Hub",
    "description": "A unified platform for Earth Observation resources, collaboration, and innovation. The platform integrates tools from WEkEO, Dunia, and other Earth Observation services into a single, user-friendly interface.",
    "goal": "To create a collaborative environment where users can access Earth Observation tools, share resources, and work together on projects with AI assistance."
  },

  "current_implementation": {
    "completed_features": [
      "Project initialization with Next.js 14",
      "Docker containerization setup",
      "MongoDB Atlas integration",
      "Redis caching implementation",
      "User authentication system with NextAuth.js",
      "Landing page with responsive design",
      "Basic component structure",
      "Legal pages (Terms of Service, Privacy Policy, Cookie Policy)",
      "Enhanced About page with centered icons and navy theme",
      "Sponsors page with organization showcase",
      "Updated navigation with proper routing",
      "Footer with social media links and sections"
    ],
    "tech_stack": {
      "frontend": ["Next.js 14", "React 19", "Tailwind CSS"],
      "backend": ["Next.js API Routes", "MongoDB Atlas", "Redis"],
      "authentication": ["NextAuth.js", "bcrypt"],
      "infrastructure": ["Docker", "Docker Compose"],
      "database": {
        "type": "MongoDB Atlas",
        "connection": "mongodb+srv://<username>:<password>@cluster0.cgoye.mongodb.net/gaiathon"
      }
    },
    "current_structure": {
      "src/": {
        "app/": {
          "description": "Next.js app router structure",
          "components": [
            "page.tsx - Landing page",
            "layout.tsx - Root layout with AuthProvider",
            "company/ - Company pages (About, Sponsors)",
            "legal/ - Legal pages and policies",
            "dashboard/ - User dashboard and profile",
            "api/ - Backend API routes"
          ]
        },
        "components/": {
          "auth/": "Authentication components",
          "home/": "Landing page components",
          "dashboard/": "Dashboard components",
          "Footer.tsx": "Global footer component"
        },
        "lib/": {
          "db/": "Database connections and models"
        },
        "types/": "TypeScript type definitions"
      }
    }
  },

  "next_session_focus": {
    "priority_features": [
      {
        "feature": "Company Section Completion",
        "components": [
          {
            "name": "Events Page",
            "elements": [
              "Event listing and details",
              "Event calendar integration",
              "Registration system"
            ]
          },
          {
            "name": "Gallery Page",
            "elements": [
              "Image grid layout",
              "Lightbox viewer",
              "Image categories and filtering"
            ]
          }
        ]
      },
      {
        "feature": "Resources Section Implementation",
        "components": [
          {
            "name": "Centralized Access",
            "elements": [
              "WEkEO integration",
              "Dunia platform connection",
              "Tool discovery interface"
            ]
          },
          {
            "name": "AI Assistant Interface",
            "elements": [
              "Chat interface",
              "Tool integration",
              "Response handling"
            ]
          }
        ]
      }
    ],
    "technical_requirements": [
      "Set up image upload and storage system for Gallery",
      "Implement event management system",
      "Configure external API integrations",
      "Set up WebSocket for real-time features",
      "Enhance error handling and logging"
    ]
  },

  "development_environment": {
    "requirements": [
      "Docker and Docker Compose installed",
      "Node.js 18 or later",
      "MongoDB Atlas account",
      "Environment variables configured",
      "Redis for caching"
    ],
    "environment_variables": {
      "required": [
        "MONGODB_URI",
        "NEXTAUTH_SECRET",
        "NEXTAUTH_URL"
      ],
      "optional": [
        "WEKEO_API_KEY",
        "DUNIA_API_KEY",
        "REDIS_URL"
      ]
    }
  },

  "rules": [
    {
      "description": "Follow Docker-first development approach",
      "pattern": "All development should be done within the Docker environment to ensure consistency"
    },
    {
      "description": "Component Organization",
      "pattern": "Place new components in appropriate directories under src/components based on their functionality"
    },
    {
      "description": "Type Safety",
      "pattern": "Maintain strict TypeScript typing for all new features and components"
    },
    {
      "description": "Authentication Flow",
      "pattern": "Ensure all protected routes and API endpoints use NextAuth.js authentication"
    },
    {
      "description": "API Integration",
      "pattern": "Implement proper error handling, rate limiting, and caching for all external API integrations"
    },
    {
      "description": "Styling Guidelines",
      "pattern": "Use Tailwind CSS for styling, maintaining the navy blue theme for key UI elements"
    }
  ]
}